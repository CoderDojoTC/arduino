{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CoderDojo Twin Cities Arduino Resources This GitHub repository is for sharing teaching resources to teach Arduino. This includes hints on getting your Python environments setup up and extensive lesson plans for several environments.","title":"CoderDojo Twin Cities Arduino Resources"},{"location":"#coderdojo-twin-cities-arduino-resources","text":"This GitHub repository is for sharing teaching resources to teach Arduino. This includes hints on getting your Python environments setup up and extensive lesson plans for several environments.","title":"CoderDojo Twin Cities Arduino Resources"},{"location":"introduction/","text":"Introduction to Arduino Course Types There are three types of courses in the CoderDojo Twin Cities Arudino: Online Courses - These courses are taught in virtual environments and don't require any hardware for our students. We use web sites like TinkerCad to simulate the behavior of Arduino devices. Hardware Courses - These courses require you to have general Arduino hardware and sensors used by the students or mentors. Note that you can still teach these courses online. Many of the hardware lab programs can also be simulated online. Project Courses - These courses often require a specific combination of hardware that the students will build for example a Simon or Pong game. Each of the hardware courses are designed to use low-cost Arduino hardware. We use low-cost Arduino Nanos for many labs since they can be purchased for around $2.50USD. Pre-course setup The online courses don't require any physical setup. However, you should have the parents create an account on TinkerCad and learn how to save and run sample programs. See the Introduction section for each course for details. Getting the Right Hardware If you are a good planner and willing to do some work you can get very low-cost parts from China at a fraction of the prices you see in kits. Just remember that the parts should be ordered 2-3 weeks before your courses start. For the Hardware Courses here are the typical components you will use: Part Name Description Price Link Note Arduino Nano Arduino Nano ATmega328 CH340G Mini USB. The main processor in a low-cost and breadboard-friendly package $2.50 each ebay - solder your own Note this version will require you to solder on the headers. Mini USB Cable Short Mini USB cable for connecting the Arduino to the PC's USB port $1.00 ebay check you computer to see what type of cable you need 400 Tie Solderless Breadboard This 1/2 size breadboard has 400 ties and is big enough for most beginning projects. It is also small enough for students to carry in a backpack $1.50 each ebay The Nano fits directly into this breadboard LEDs 100 LEDs of various colors (Red, Green, Blue, Yellow, White). At $1 for 100 LEDs you can stop worrying about burning a few out $1 for 100 ebay 330 Ohm Resistors This package of 100 should be enough for most classrooms $1.25 for 100 ebay 330 ohms are perfect for connecting an LED to a 5-volt source Breadboard Jumper Wires 65 Male-to-Male jumpers of various lengths $2.50 for 65 ebay Reuse for many projects Ping Sensor HC-SR04 Ultrasonic distance sensor. There are many sensors priced much higher but this will work fine for our projects $1.50 each ebay Sample Starter Kits Basic Starter Kit We understand that not every school wants to purchase individual components that may 2-3 weeks to arrive from China. If you need a kit quickly and are willing to compromise on component choice and cost here are some options that usually ship from Amazon in under a week. This kit from ELEGOO is inexpensive but lacks some of the basic sensores such as a ping sensor. ELEGOO UNO Project Basic Starter Kit with Tutorial and UNO R3 Compatible with Arduino IDE $17.99","title":"Introduction"},{"location":"introduction/#introduction-to-arduino","text":"","title":"Introduction to Arduino"},{"location":"introduction/#course-types","text":"There are three types of courses in the CoderDojo Twin Cities Arudino: Online Courses - These courses are taught in virtual environments and don't require any hardware for our students. We use web sites like TinkerCad to simulate the behavior of Arduino devices. Hardware Courses - These courses require you to have general Arduino hardware and sensors used by the students or mentors. Note that you can still teach these courses online. Many of the hardware lab programs can also be simulated online. Project Courses - These courses often require a specific combination of hardware that the students will build for example a Simon or Pong game. Each of the hardware courses are designed to use low-cost Arduino hardware. We use low-cost Arduino Nanos for many labs since they can be purchased for around $2.50USD.","title":"Course Types"},{"location":"introduction/#pre-course-setup","text":"The online courses don't require any physical setup. However, you should have the parents create an account on TinkerCad and learn how to save and run sample programs. See the Introduction section for each course for details.","title":"Pre-course setup"},{"location":"introduction/#getting-the-right-hardware","text":"If you are a good planner and willing to do some work you can get very low-cost parts from China at a fraction of the prices you see in kits. Just remember that the parts should be ordered 2-3 weeks before your courses start. For the Hardware Courses here are the typical components you will use: Part Name Description Price Link Note Arduino Nano Arduino Nano ATmega328 CH340G Mini USB. The main processor in a low-cost and breadboard-friendly package $2.50 each ebay - solder your own Note this version will require you to solder on the headers. Mini USB Cable Short Mini USB cable for connecting the Arduino to the PC's USB port $1.00 ebay check you computer to see what type of cable you need 400 Tie Solderless Breadboard This 1/2 size breadboard has 400 ties and is big enough for most beginning projects. It is also small enough for students to carry in a backpack $1.50 each ebay The Nano fits directly into this breadboard LEDs 100 LEDs of various colors (Red, Green, Blue, Yellow, White). At $1 for 100 LEDs you can stop worrying about burning a few out $1 for 100 ebay 330 Ohm Resistors This package of 100 should be enough for most classrooms $1.25 for 100 ebay 330 ohms are perfect for connecting an LED to a 5-volt source Breadboard Jumper Wires 65 Male-to-Male jumpers of various lengths $2.50 for 65 ebay Reuse for many projects Ping Sensor HC-SR04 Ultrasonic distance sensor. There are many sensors priced much higher but this will work fine for our projects $1.50 each ebay","title":"Getting the Right Hardware"},{"location":"introduction/#sample-starter-kits","text":"","title":"Sample Starter Kits"},{"location":"introduction/#basic-starter-kit","text":"We understand that not every school wants to purchase individual components that may 2-3 weeks to arrive from China. If you need a kit quickly and are willing to compromise on component choice and cost here are some options that usually ship from Amazon in under a week. This kit from ELEGOO is inexpensive but lacks some of the basic sensores such as a ping sensor. ELEGOO UNO Project Basic Starter Kit with Tutorial and UNO R3 Compatible with Arduino IDE $17.99","title":"Basic Starter Kit"},{"location":"tinkercad/00-intro/","text":"Learning to Program Arduino with Tinkercad(TM) We will be using Autocad's web-based tool TinkerCad(TM) to learn how to program with an Arduino. This is a good way to get started if you are doing online mentoring or if you have difficulty installing customized Arduino drivers or the Arduino IDE on your computer. Here are the labs we will do: Blink Make a single LED go on and off. We will also learn about how to wire up an LED using a current limiting resistor so we don't burn out our LEDs. You can go to the lab by clicking here or use the navigation menu on the left to get to this lab. Blink Three LEDs Make two or more LEDs blink with various patterns. Click here to go to the lab. Change Blink Speed with a Potentiometer Use a potentiometer to change the frequency of a flashing LED. Click here Ping Sensor Measure the distance using an ultrasonic ping sensor. This will be very useful when we want to build a collision-avoidance robot. Photo Sensor Use a photoresistor to measure how much light is present in a room.","title":"Introduction"},{"location":"tinkercad/00-intro/#learning-to-program-arduino-with-tinkercadtm","text":"We will be using Autocad's web-based tool TinkerCad(TM) to learn how to program with an Arduino. This is a good way to get started if you are doing online mentoring or if you have difficulty installing customized Arduino drivers or the Arduino IDE on your computer. Here are the labs we will do:","title":"Learning to Program Arduino with Tinkercad(TM)"},{"location":"tinkercad/00-intro/#blink","text":"Make a single LED go on and off. We will also learn about how to wire up an LED using a current limiting resistor so we don't burn out our LEDs. You can go to the lab by clicking here or use the navigation menu on the left to get to this lab.","title":"Blink"},{"location":"tinkercad/00-intro/#blink-three-leds","text":"Make two or more LEDs blink with various patterns. Click here to go to the lab.","title":"Blink Three LEDs"},{"location":"tinkercad/00-intro/#change-blink-speed-with-a-potentiometer","text":"Use a potentiometer to change the frequency of a flashing LED. Click here","title":"Change Blink Speed with a Potentiometer"},{"location":"tinkercad/00-intro/#ping-sensor","text":"Measure the distance using an ultrasonic ping sensor. This will be very useful when we want to build a collision-avoidance robot.","title":"Ping Sensor"},{"location":"tinkercad/00-intro/#photo-sensor","text":"Use a photoresistor to measure how much light is present in a room.","title":"Photo Sensor"},{"location":"tinkercad/00-tinkercad-account-setup/","text":"Setting up Your Tinkercad(TM) Account Tinkercad(TM) allows each student to have their own account so that you can keep programs that you have created and come back to them in the future. Before you begin you should got to the Tinkercad web site and create a new account for each student. Tinkercad Web Site Focus on Tinkercad Circuits Tinkercad was originally created to teach web-based Computer-Aided Design (CAD). Later Tinkercad added support for Arduino. However, you must be sure to navigate to the Circuits section of Tinkercad before you begin creating Arduino circuits. Tinkercad Knowledge Base Tinkercad has a list of frequently asked questions: [https://tinkercad.zendesk.com/hc/en-us/sections/115002539667-Tinkercad-Circuits] (https://tinkercad.zendesk.com/hc/en-us/sections/115002539667-Tinkercad-Circuits) Tinkercad Gallery of Circuits We encourage our mentors and students to explore the gallery of Tinkercad circuits. Here is a link that will provide you some sample circuits you can modify. https://www.tinkercad.com/learn/project-gallery;collectionId=OMOZACHJ9IR8LRE","title":"Setting up Your Tinkercad(TM) Account"},{"location":"tinkercad/00-tinkercad-account-setup/#setting-up-your-tinkercadtm-account","text":"Tinkercad(TM) allows each student to have their own account so that you can keep programs that you have created and come back to them in the future. Before you begin you should got to the Tinkercad web site and create a new account for each student. Tinkercad Web Site","title":"Setting up Your Tinkercad(TM) Account"},{"location":"tinkercad/00-tinkercad-account-setup/#focus-on-tinkercad-circuits","text":"Tinkercad was originally created to teach web-based Computer-Aided Design (CAD). Later Tinkercad added support for Arduino. However, you must be sure to navigate to the Circuits section of Tinkercad before you begin creating Arduino circuits.","title":"Focus on Tinkercad Circuits"},{"location":"tinkercad/00-tinkercad-account-setup/#tinkercad-knowledge-base","text":"Tinkercad has a list of frequently asked questions: [https://tinkercad.zendesk.com/hc/en-us/sections/115002539667-Tinkercad-Circuits] (https://tinkercad.zendesk.com/hc/en-us/sections/115002539667-Tinkercad-Circuits)","title":"Tinkercad Knowledge Base"},{"location":"tinkercad/00-tinkercad-account-setup/#tinkercad-gallery-of-circuits","text":"We encourage our mentors and students to explore the gallery of Tinkercad circuits. Here is a link that will provide you some sample circuits you can modify. https://www.tinkercad.com/learn/project-gallery;collectionId=OMOZACHJ9IR8LRE","title":"Tinkercad Gallery of Circuits"},{"location":"tinkercad/01-blink/","text":"Arduino Blink Lab In this lab, we will learn how to make a Light Emitting Diode (LED) turn on and off at various speeds. The Blink lab is kind of like \"Hello world!\" in Arduino: it is the first program most students learn. Getting blink working is not always easy. You will need to become familiar with using Tinkercad and entering code into the system before you can run the example. LED Connections The LED has two connectors on it. But you should never connect both the wires directly to power. That will burn out the LED. The LED has a negative side (called the Cathode) and a positive site (called the Anode). It is important that you always put a proper resistor in the path of the circuit to limit the current. In the case of a standard 5 volt Arduino we will use a 330-ohm resistor to limit the current to the LED. It is important that you don't confuse these two sides. If you don't hook them up correctly your circuit will not work! Here is a picture of the cathode and anode of an LED. Remembering Cathode and Anode Sometimes you can use a picture to help you remember which end is the cathode and which one is the anode. I try to think of a short black \"cat\" to remember the negative cathode. I also try to think of my friend Ann who is tall and loves red when I think of the Anode. Here is a picture that you can use to remember this idea: Sometimes it is hard to remember which side is which. You Circuit Diagram Here is the circuit diagram we will use for our blink lab. You can create this using the following steps: Step 1: Create a New Circuit Go to the left navigation area and click the Circuits and press the green Create New Circuit button: Step 2: Add an Arduino Uno Go to the right search area and type in \"Arduino\". You should see the following image: Now clink on the image and use your mouse to drag the icon of the Arduino to the main central area of your screen. Step 3: Add the LED and the resistor Now go back to the right-side search area and enter \"LED\". You should see an image like this: Note that in this diagram, the straight wire on the left is the cathode which goes to GND pin on the Arduino. The bent pin on the right is anode which goes through a resistor and then to a digital output pin. Step 4: Add the Resistor and Set it to be 330 ohms Finally, we will also add a resistor to our circuit. Go to the right side, type in \"resistor\" and you should see an image like this: Unlike the LED, the resistor is just a generic component but we must next set the value of the resistor to be 330 ohms. We do this by clicking directly on the resistor in the circut diagram and changing the value in the inspector region of the screen: Step 5: Make the connections Now we have our three components on the screen. We are ready to hook them up. First, lets connect the left side of the LED (the cathode) to the GND or ground negative pin of the Arduino. Once you have the wire connected you can select it and you will be able to change the color. My convention, any wire that go to GND are typically colord black. Now drag the 330 ohm resistor so it connect to the right pin of the LED and then add Your circuit should look like the following diagram: Code Almost all Arduino programs have two main functions: A setup function that runs once when the Aruduino powers up A loop function that runs continually until the power is turned off (or the reset is triggered) The Setup Function void setup () { pinMode ( 13 , OUTPUT ); } In our blink program the setup function just sets pin 13 as an output pin. That is pretty simple. You will notice that the word setup is followed by an open and a closed parenthesis. This is to indicate that there are no parameters going into the function. The Loop Function The loom function will do four functions Turn the voltage of pin 13 HIGH (+5 volts) Wait one second (1000 milliseconds) using the delay function Turn the voltage of pin 13 LOW (ground or 0 volts) Wait one second again It repeats the on/off every second continually until the power is turned off. void loop () { digitalWrite ( 13 , HIGH ); delay ( 1000 ); // Wait for 1000 millisecond(s) digitalWrite ( 13 , LOW ); delay ( 1000 ); } The Full Program Here is the full program: void setup () { pinMode ( 13 , OUTPUT ); } void loop () { digitalWrite ( 13 , HIGH ); delay ( 1000 ); // Wait for 1000 millisecond(s) digitalWrite ( 13 , LOW ); delay ( 1000 ); } You can type this into the Tinkercad program or do a copy here and paste it into the code area. Working example on Tinkercad Blink on Tinkercad Experiments What happens if you change the delay times (currently set at 1000) to be 100? What happens if you change the delay times to be 50? What happens if you change the delay times to be 20? What happens if you change the delay times to be 10? Can you still see the blinking at all? Food for thought Most movies are shown around shown at 24 frames per second? Why do you think they picked this speed? If you hook up a photo sensor to a florescent light bulb you will see that it flickers 120 times per second. Household current runs at half this rate (60 times per second). Why do you think that the light flicker rate is twice the frequency? Hint: draw a wave that goes positive and negative. Look up Sine Wave in Wikipedia. What did you learn about the human eye? If you would like to learn more about LED circuits here is a Wikipedia Article on LED Circuits","title":"Blink"},{"location":"tinkercad/01-blink/#arduino-blink-lab","text":"In this lab, we will learn how to make a Light Emitting Diode (LED) turn on and off at various speeds. The Blink lab is kind of like \"Hello world!\" in Arduino: it is the first program most students learn. Getting blink working is not always easy. You will need to become familiar with using Tinkercad and entering code into the system before you can run the example.","title":"Arduino Blink Lab"},{"location":"tinkercad/01-blink/#led-connections","text":"The LED has two connectors on it. But you should never connect both the wires directly to power. That will burn out the LED. The LED has a negative side (called the Cathode) and a positive site (called the Anode). It is important that you always put a proper resistor in the path of the circuit to limit the current. In the case of a standard 5 volt Arduino we will use a 330-ohm resistor to limit the current to the LED. It is important that you don't confuse these two sides. If you don't hook them up correctly your circuit will not work! Here is a picture of the cathode and anode of an LED.","title":"LED Connections"},{"location":"tinkercad/01-blink/#remembering-cathode-and-anode","text":"Sometimes you can use a picture to help you remember which end is the cathode and which one is the anode. I try to think of a short black \"cat\" to remember the negative cathode. I also try to think of my friend Ann who is tall and loves red when I think of the Anode. Here is a picture that you can use to remember this idea: Sometimes it is hard to remember which side is which. You","title":"Remembering Cathode and Anode"},{"location":"tinkercad/01-blink/#circuit-diagram","text":"Here is the circuit diagram we will use for our blink lab. You can create this using the following steps:","title":"Circuit Diagram"},{"location":"tinkercad/01-blink/#step-1-create-a-new-circuit","text":"Go to the left navigation area and click the Circuits and press the green Create New Circuit button:","title":"Step 1: Create a New Circuit"},{"location":"tinkercad/01-blink/#step-2-add-an-arduino-uno","text":"Go to the right search area and type in \"Arduino\". You should see the following image: Now clink on the image and use your mouse to drag the icon of the Arduino to the main central area of your screen.","title":"Step 2: Add an Arduino Uno"},{"location":"tinkercad/01-blink/#step-3-add-the-led-and-the-resistor","text":"Now go back to the right-side search area and enter \"LED\". You should see an image like this: Note that in this diagram, the straight wire on the left is the cathode which goes to GND pin on the Arduino. The bent pin on the right is anode which goes through a resistor and then to a digital output pin.","title":"Step 3: Add the LED and the resistor"},{"location":"tinkercad/01-blink/#step-4-add-the-resistor-and-set-it-to-be-330-ohms","text":"Finally, we will also add a resistor to our circuit. Go to the right side, type in \"resistor\" and you should see an image like this: Unlike the LED, the resistor is just a generic component but we must next set the value of the resistor to be 330 ohms. We do this by clicking directly on the resistor in the circut diagram and changing the value in the inspector region of the screen:","title":"Step 4: Add the Resistor and Set it to be 330 ohms"},{"location":"tinkercad/01-blink/#step-5-make-the-connections","text":"Now we have our three components on the screen. We are ready to hook them up. First, lets connect the left side of the LED (the cathode) to the GND or ground negative pin of the Arduino. Once you have the wire connected you can select it and you will be able to change the color. My convention, any wire that go to GND are typically colord black. Now drag the 330 ohm resistor so it connect to the right pin of the LED and then add Your circuit should look like the following diagram:","title":"Step 5: Make the connections"},{"location":"tinkercad/01-blink/#code","text":"Almost all Arduino programs have two main functions: A setup function that runs once when the Aruduino powers up A loop function that runs continually until the power is turned off (or the reset is triggered)","title":"Code"},{"location":"tinkercad/01-blink/#the-setup-function","text":"void setup () { pinMode ( 13 , OUTPUT ); } In our blink program the setup function just sets pin 13 as an output pin. That is pretty simple. You will notice that the word setup is followed by an open and a closed parenthesis. This is to indicate that there are no parameters going into the function.","title":"The Setup Function"},{"location":"tinkercad/01-blink/#the-loop-function","text":"The loom function will do four functions Turn the voltage of pin 13 HIGH (+5 volts) Wait one second (1000 milliseconds) using the delay function Turn the voltage of pin 13 LOW (ground or 0 volts) Wait one second again It repeats the on/off every second continually until the power is turned off. void loop () { digitalWrite ( 13 , HIGH ); delay ( 1000 ); // Wait for 1000 millisecond(s) digitalWrite ( 13 , LOW ); delay ( 1000 ); }","title":"The Loop Function"},{"location":"tinkercad/01-blink/#the-full-program","text":"Here is the full program: void setup () { pinMode ( 13 , OUTPUT ); } void loop () { digitalWrite ( 13 , HIGH ); delay ( 1000 ); // Wait for 1000 millisecond(s) digitalWrite ( 13 , LOW ); delay ( 1000 ); } You can type this into the Tinkercad program or do a copy here and paste it into the code area.","title":"The Full Program"},{"location":"tinkercad/01-blink/#working-example-on-tinkercad","text":"Blink on Tinkercad","title":"Working example on Tinkercad"},{"location":"tinkercad/01-blink/#experiments","text":"What happens if you change the delay times (currently set at 1000) to be 100? What happens if you change the delay times to be 50? What happens if you change the delay times to be 20? What happens if you change the delay times to be 10? Can you still see the blinking at all?","title":"Experiments"},{"location":"tinkercad/01-blink/#food-for-thought","text":"Most movies are shown around shown at 24 frames per second? Why do you think they picked this speed? If you hook up a photo sensor to a florescent light bulb you will see that it flickers 120 times per second. Household current runs at half this rate (60 times per second). Why do you think that the light flicker rate is twice the frequency? Hint: draw a wave that goes positive and negative. Look up Sine Wave in Wikipedia. What did you learn about the human eye? If you would like to learn more about LED circuits here is a Wikipedia Article on LED Circuits","title":"Food for thought"},{"location":"tinkercad/02-blink-three-leds/","text":"Arduino Blink Three LEDs In this lab, we will learn how to make three LEDs of different color blink on and off. We will be replicating the same blink circuit in the prior lab for a red, a green and a blue LED. LED Connections The LED circuit is below. Just like the blink lab, each LED will have a black wire from the cathode of the LED to GND. The Anode of each LED will go through a resistor before it connects to one of the Arduino digital output pins. We will be using pin 13, 12 and 11 (left to right) on the Arduino. Here is a picture of red, green, blue LED circuit. Circuit Diagram Here is the circuit diagram we will use for our blink lab. Code The Setup Function Our setup function will be similar to the blink lab except instead of just one output pin, we will have three. The pins are 13, 12 and 11. void setup () { pinMode ( 13 , OUTPUT ); pinMode ( 12 , OUTPUT ); pinMode ( 11 , OUTPUT ); } The Loop Function The loop function will first turn on and off the red LED on pin 13, just like in the blink lab. We can then copy and paste the four lines of code right after itself to control the red LED on pin 12. After we paste code in we will need to change the pin number from 13 to 12. We will repeat this process and copy and paste four lines for pin 11, the blue pin. void loop () { // turn the red LED on pin 13 on and off digitalWrite ( 13 , HIGH ); delay ( 1000 ); digitalWrite ( 13 , LOW ); delay ( 1000 ); // turn the green LED on pin 12 on and off digitalWrite ( 12 , HIGH ); delay ( 1000 ); digitalWrite ( 12 , LOW ); delay ( 1000 ); // turn the blue LED on pin 11 on and off digitalWrite ( 11 , HIGH ); delay ( 1000 ); digitalWrite ( 11 , LOW ); delay ( 1000 ); } The Full Program Here is the full program: void setup () { pinMode ( 13 , OUTPUT ); pinMode ( 12 , OUTPUT ); pinMode ( 11 , OUTPUT ); } void loop () { // turn the red LED on pin 13 on and off digitalWrite ( 13 , HIGH ); delay ( 1000 ); digitalWrite ( 13 , LOW ); delay ( 1000 ); // turn the green LED on pin 12 on and off digitalWrite ( 12 , HIGH ); delay ( 1000 ); digitalWrite ( 12 , LOW ); delay ( 1000 ); // turn the blue LED on pin 11 on and off digitalWrite ( 11 , HIGH ); delay ( 1000 ); digitalWrite ( 11 , LOW ); delay ( 1000 ); } You can type this into the Tinkercad program or do a copy here and paste it into the code area. Working example on Tinkercad Blink Three LEDs Experiments When the first LED turns off there is a pause of one second before the second gree LED turns on. How would you change the loop() function so that immediately after the first red LED goes off the second green LED goes on? How many places in the program do you have to change to make pattern speed up or slow down? Could you use a variable to allow you to make a change at a single location in the program to adjust the speed?","title":"Blink Three LEDs"},{"location":"tinkercad/02-blink-three-leds/#arduino-blink-three-leds","text":"In this lab, we will learn how to make three LEDs of different color blink on and off. We will be replicating the same blink circuit in the prior lab for a red, a green and a blue LED.","title":"Arduino Blink Three LEDs"},{"location":"tinkercad/02-blink-three-leds/#led-connections","text":"The LED circuit is below. Just like the blink lab, each LED will have a black wire from the cathode of the LED to GND. The Anode of each LED will go through a resistor before it connects to one of the Arduino digital output pins. We will be using pin 13, 12 and 11 (left to right) on the Arduino. Here is a picture of red, green, blue LED circuit.","title":"LED Connections"},{"location":"tinkercad/02-blink-three-leds/#circuit-diagram","text":"Here is the circuit diagram we will use for our blink lab.","title":"Circuit Diagram"},{"location":"tinkercad/02-blink-three-leds/#code","text":"","title":"Code"},{"location":"tinkercad/02-blink-three-leds/#the-setup-function","text":"Our setup function will be similar to the blink lab except instead of just one output pin, we will have three. The pins are 13, 12 and 11. void setup () { pinMode ( 13 , OUTPUT ); pinMode ( 12 , OUTPUT ); pinMode ( 11 , OUTPUT ); }","title":"The Setup Function"},{"location":"tinkercad/02-blink-three-leds/#the-loop-function","text":"The loop function will first turn on and off the red LED on pin 13, just like in the blink lab. We can then copy and paste the four lines of code right after itself to control the red LED on pin 12. After we paste code in we will need to change the pin number from 13 to 12. We will repeat this process and copy and paste four lines for pin 11, the blue pin. void loop () { // turn the red LED on pin 13 on and off digitalWrite ( 13 , HIGH ); delay ( 1000 ); digitalWrite ( 13 , LOW ); delay ( 1000 ); // turn the green LED on pin 12 on and off digitalWrite ( 12 , HIGH ); delay ( 1000 ); digitalWrite ( 12 , LOW ); delay ( 1000 ); // turn the blue LED on pin 11 on and off digitalWrite ( 11 , HIGH ); delay ( 1000 ); digitalWrite ( 11 , LOW ); delay ( 1000 ); }","title":"The Loop Function"},{"location":"tinkercad/02-blink-three-leds/#the-full-program","text":"Here is the full program: void setup () { pinMode ( 13 , OUTPUT ); pinMode ( 12 , OUTPUT ); pinMode ( 11 , OUTPUT ); } void loop () { // turn the red LED on pin 13 on and off digitalWrite ( 13 , HIGH ); delay ( 1000 ); digitalWrite ( 13 , LOW ); delay ( 1000 ); // turn the green LED on pin 12 on and off digitalWrite ( 12 , HIGH ); delay ( 1000 ); digitalWrite ( 12 , LOW ); delay ( 1000 ); // turn the blue LED on pin 11 on and off digitalWrite ( 11 , HIGH ); delay ( 1000 ); digitalWrite ( 11 , LOW ); delay ( 1000 ); } You can type this into the Tinkercad program or do a copy here and paste it into the code area.","title":"The Full Program"},{"location":"tinkercad/02-blink-three-leds/#working-example-on-tinkercad","text":"Blink Three LEDs","title":"Working example on Tinkercad"},{"location":"tinkercad/02-blink-three-leds/#experiments","text":"When the first LED turns off there is a pause of one second before the second gree LED turns on. How would you change the loop() function so that immediately after the first red LED goes off the second green LED goes on? How many places in the program do you have to change to make pattern speed up or slow down? Could you use a variable to allow you to make a change at a single location in the program to adjust the speed?","title":"Experiments"},{"location":"tinkercad/03-change-blink-speed/","text":"Arduino Change Blink Speed with Potentiometer In this lab we will use a potentiometer to make an LED change its blink speed. The circuit will be similar to the blink lab with the addition of a potentiometer that has its middle wire going into analog input port A0. Creating the Circuit Start with the Blink Lab Here is the circuit diagram we will use for our blink lab. Add the Potentiometer Connect the Potentiometer Code In the first programs we only had a simple setup and a loop. But this progam will also need to add a variable declaration before the setup. Declaring a Variable We will need to declare a variable to hold the value of the potentiometer. In C we will need to declare that it is of type integer with the int . int sensorValue = 0 ; The Setup Function Just like the Blink Lab, we will need to make pin 13 be an digital OUTPUT pin. But in this lab we also need to set the Analog pin A0 to be an INPUT port. void setup () { pinMode ( 13 , OUTPUT ); pinMode ( A0 , INPUT ); } The Loop Function The loom function will do perform the following steps Read the value of the potentiometer Wait a delay time which is the value of potentiometer using the delay function The potentiometer will have a value from 0 to 1023. A value of near zero will flash so fast we will not be able to see it. A value near 1023 will be a value which is around 1000 milliseconds or about one second. void loop () { sensorValue = analogRead ( A0 ); digitalWrite ( 13 , HIGH ); delay ( sensorValue ); digitalWrite ( 13 , LOW ); delay ( sensorValue ); } The Full Program Here is the full program: int sensorValue = 0 ; void setup () { pinMode ( 13 , OUTPUT ); pinMode ( A0 , INPUT ); } void loop () { sensorValue = analogRead ( A0 ); digitalWrite ( 13 , HIGH ); delay ( sensorValue ); digitalWrite ( 13 , LOW ); delay ( sensorValue ); } You can type this into the Tinkercad program or do a copy here and paste it into the code area. Working example on Tinkercad Blink on Tinkercad Experiments Can you add a potentiometer to the three LED lab to change its speed?","title":"Use Pot to Change Blink Speed"},{"location":"tinkercad/03-change-blink-speed/#arduino-change-blink-speed-with-potentiometer","text":"In this lab we will use a potentiometer to make an LED change its blink speed. The circuit will be similar to the blink lab with the addition of a potentiometer that has its middle wire going into analog input port A0.","title":"Arduino Change Blink Speed with Potentiometer"},{"location":"tinkercad/03-change-blink-speed/#creating-the-circuit","text":"","title":"Creating the Circuit"},{"location":"tinkercad/03-change-blink-speed/#start-with-the-blink-lab","text":"Here is the circuit diagram we will use for our blink lab.","title":"Start with the Blink Lab"},{"location":"tinkercad/03-change-blink-speed/#add-the-potentiometer","text":"","title":"Add the Potentiometer"},{"location":"tinkercad/03-change-blink-speed/#connect-the-potentiometer","text":"","title":"Connect the Potentiometer"},{"location":"tinkercad/03-change-blink-speed/#code","text":"In the first programs we only had a simple setup and a loop. But this progam will also need to add a variable declaration before the setup.","title":"Code"},{"location":"tinkercad/03-change-blink-speed/#declaring-a-variable","text":"We will need to declare a variable to hold the value of the potentiometer. In C we will need to declare that it is of type integer with the int . int sensorValue = 0 ;","title":"Declaring a Variable"},{"location":"tinkercad/03-change-blink-speed/#the-setup-function","text":"Just like the Blink Lab, we will need to make pin 13 be an digital OUTPUT pin. But in this lab we also need to set the Analog pin A0 to be an INPUT port. void setup () { pinMode ( 13 , OUTPUT ); pinMode ( A0 , INPUT ); }","title":"The Setup Function"},{"location":"tinkercad/03-change-blink-speed/#the-loop-function","text":"The loom function will do perform the following steps Read the value of the potentiometer Wait a delay time which is the value of potentiometer using the delay function The potentiometer will have a value from 0 to 1023. A value of near zero will flash so fast we will not be able to see it. A value near 1023 will be a value which is around 1000 milliseconds or about one second. void loop () { sensorValue = analogRead ( A0 ); digitalWrite ( 13 , HIGH ); delay ( sensorValue ); digitalWrite ( 13 , LOW ); delay ( sensorValue ); }","title":"The Loop Function"},{"location":"tinkercad/03-change-blink-speed/#the-full-program","text":"Here is the full program: int sensorValue = 0 ; void setup () { pinMode ( 13 , OUTPUT ); pinMode ( A0 , INPUT ); } void loop () { sensorValue = analogRead ( A0 ); digitalWrite ( 13 , HIGH ); delay ( sensorValue ); digitalWrite ( 13 , LOW ); delay ( sensorValue ); } You can type this into the Tinkercad program or do a copy here and paste it into the code area.","title":"The Full Program"},{"location":"tinkercad/03-change-blink-speed/#working-example-on-tinkercad","text":"Blink on Tinkercad","title":"Working example on Tinkercad"},{"location":"tinkercad/03-change-blink-speed/#experiments","text":"Can you add a potentiometer to the three LED lab to change its speed?","title":"Experiments"},{"location":"tinkercad-neopixel/00-intro/","text":"00-intro.md","title":"00 intro"},{"location":"tinkercad-neopixel/01-blink/","text":"Neopixel Blink Circuit Code Link Working Example https://www.tinkercad.com/things/9N27JUfFSCe Experiments","title":"Neopixel Blink"},{"location":"tinkercad-neopixel/01-blink/#neopixel-blink","text":"","title":"Neopixel Blink"},{"location":"tinkercad-neopixel/01-blink/#circuit","text":"","title":"Circuit"},{"location":"tinkercad-neopixel/01-blink/#code","text":"","title":"Code"},{"location":"tinkercad-neopixel/01-blink/#link-working-example","text":"https://www.tinkercad.com/things/9N27JUfFSCe","title":"Link Working Example"},{"location":"tinkercad-neopixel/01-blink/#experiments","text":"","title":"Experiments"}]}