/*
 * PIR Interrupt test
 * 
 */

#define PIR_PIN A0
#define PWM_OUT_PIN 3

#define STATUS_LED 12

int intensity[256] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05,
0x05, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x09, 0x09, 0x0A, 0x0A, 0x0B, 0x0B,
0x0C, 0x0C, 0x0D, 0x0D, 0x0E, 0x0F, 0x0F, 0x10, 0x11, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1F, 0x20, 0x21, 0x23, 0x24, 0x26, 0x27, 0x29, 0x2B, 0x2C,
0x2E, 0x30, 0x32, 0x34, 0x36, 0x38, 0x3A, 0x3C, 0x3E, 0x40, 0x43, 0x45, 0x47, 0x4A, 0x4C, 0x4F,
0x51, 0x54, 0x57, 0x59, 0x5C, 0x5F, 0x62, 0x64, 0x67, 0x6A, 0x6D, 0x70, 0x73, 0x76, 0x79, 0x7C,
0x7F, 0x82, 0x85, 0x88, 0x8B, 0x8E, 0x91, 0x94, 0x97, 0x9A, 0x9C, 0x9F, 0xA2, 0xA5, 0xA7, 0xAA,
0xAD, 0xAF, 0xB2, 0xB4, 0xB7, 0xB9, 0xBB, 0xBE, 0xC0, 0xC2, 0xC4, 0xC6, 0xC8, 0xCA, 0xCC, 0xCE,
0xD0, 0xD2, 0xD3, 0xD5, 0xD7, 0xD8, 0xDA, 0xDB, 0xDD, 0xDE, 0xDF, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5,
0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xED, 0xEE, 0xEF, 0xEF, 0xF0, 0xF1, 0xF1, 0xF2,
0xF2, 0xF3, 0xF3, 0xF4, 0xF4, 0xF5, 0xF5, 0xF6, 0xF6, 0xF6, 0xF7, 0xF7, 0xF7, 0xF8, 0xF8, 0xF8,
0xF9, 0xF9, 0xF9, 0xF9, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFC,
0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD,
0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF};

// 1 for on, 0 for off
int pir_state = 0;
int pir_last_state = 0;
int led_strip_state = 1; // turn the LED on on power up

unsigned long lastChangeTime = 0;  // the last time the output pin was toggled
unsigned long deltaTime = 0;  // time difference between now and last change
unsigned long debounceDelay = 15000;    // 10 seconds

void setup() {
  pinMode(PIR_PIN, INPUT);
  pinMode(PWM_OUT_PIN, OUTPUT);
  pinMode(STATUS_LED, OUTPUT);
 
  analogWrite(PWM_OUT_PIN, 0); // make sure the LED is off to start
  led_strip_state = 0;
  lastChangeTime = millis();
  Serial.begin(9600);
  // flash on for 1 second
  digitalWrite(STATUS_LED, HIGH);
  analogWrite(PWM_OUT_PIN, 255);
  delay(1000);
  analogWrite(PWM_OUT_PIN, 0);
  digitalWrite(STATUS_LED, LOW);
}

void loop() {

  // get the new state of the PIR sensor
  pir_state = digitalRead(PIR_PIN);
  
  Serial.print("pir_state=");
  Serial.print(pir_state);
  Serial.print(" led_state=");
  Serial.print(led_strip_state);
  // we calculate the milliseconds since our last change
  deltaTime = millis() - lastChangeTime;
  Serial.print(" deltaTime=");
  Serial.println(deltaTime);
  
  
  if (pir_state == 1 && led_strip_state == 0)
      turn_on();
      else if (pir_state == 0 && led_strip_state == 1) turn_off();

  delay(200);
}

void turn_on() {
  if (deltaTime > debounceDelay) {
    Serial.println("Light Turning On...");
    for (int i=0; i<=255; i++) {
      analogWrite(PWM_OUT_PIN, intensity[i]);
      delay(20); // 1/50th of a second for 5 second ramp up
    }
    digitalWrite(STATUS_LED, HIGH);
    led_strip_state = 1;
    lastChangeTime =  millis();
  }
}

void turn_off() {
  if (deltaTime > debounceDelay) {
    Serial.println("Light Turning Off...");
    for (int i=255; i>=0; i--) {
      analogWrite(PWM_OUT_PIN, i);
      delay(20); // 1/50th of a second for 5 second ramp up
    }
    digitalWrite(STATUS_LED, LOW);
    led_strip_state = 0;
    lastChangeTime =  millis();
  }
}
